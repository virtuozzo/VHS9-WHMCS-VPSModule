/*
 * Websock: high-performance binary WebSockets
 * Copyright (C) 2012 Joel Martin
 * Licensed under MPL 2.0 (see LICENSE.txt)
 *
 * Websock is similar to the standard WebSocket object but Websock
 * enables communication with raw TCP sockets (i.e. the binary stream)
 * via websockify. This is accomplished by base64 encoding the data
 * stream between Websock and websockify.
 *
 * Websock has built-in receive queue buffering; the message event
 * does not contain actual data but is simply a notification that
 * there is new data available. Several rQ* methods are available to
 * read binary data off of the receive queue.
 */
/*jslint browser: true, bitwise: false, plusplus: false */
/*global Util, Base64 */
// Load Flash WebSocket emulator if needed
// To force WebSocket emulator even when native WebSocket available
//window.WEB_SOCKET_FORCE_FLASH = true;
// To enable WebSocket emulator debug:
//window.WEB_SOCKET_DEBUG=1;
function Websock(){"use strict";function f(){return o}function l(){return r}function c(){return i}function h(e){i=e}function p(){return r.length-i}function d(){return r[i]}function v(){return r[i++]}function m(e){i===0?r.unshift(e):(i-=1,r[i]=e)}function g(){return(r[i++]<<8)+r[i++]}function y(){return(r[i++]<<24)+(r[i++]<<16)+(r[i++]<<8)+r[i++]}function b(e){typeof e=="undefined"&&(e=p());var t=r.slice(i,i+e);return i+=e,String.fromCharCode.apply(null,t)}function w(e){return typeof e=="undefined"&&(e=p()),i+=e,r.slice(i-e,i)}function E(e,t){return t?r.slice(i+e,i+t):r.slice(i+e)}function S(e,t,n){var s=r.length-i;if(s<t){if(n){if(i<n)throw"rQwait cannot backup "+n+" bytes";i-=n}return!0}return!1}function x(){return n==="binary"?(new Uint8Array(o)).buffer:Base64.encode(o)}function T(e){if(n==="binary"){var t=new Uint8Array(e);for(var i=0;i<t.length;i++)r.push(t[i])}else r=r.concat(Base64.decode(e,0))}function N(){return t.bufferedAmount!==0&&Util.Debug("bufferedAmount: "+t.bufferedAmount),t.bufferedAmount<e.maxBufferedAmount?(o.length>0&&(t.send(x(o)),o=[]),!0):(Util.Info("Delaying send, bufferedAmount: "+t.bufferedAmount),!1)}function C(e){return o=o.concat(e),N()}function k(t){e.send(t.split("").map(function(e){return e.charCodeAt(0)}))}function L(e){try{T(e.data),p()>0?(u.message(),r.length>s&&(r=r.slice(i),i=0)):Util.Debug("Ignoring empty message")}catch(t){typeof t.stack!="undefined"?Util.Warn("recv_message, caught exception: "+t.stack):typeof t.description!="undefined"?Util.Warn("recv_message, caught exception: "+t.description):Util.Warn("recv_message, caught exception:"+t),typeof t.name!="undefined"?u.error(t.name+": "+t.message):u.error(t)}}function A(e,t){u[e]=t}function O(e){r=[],i=0,o=[],t=null;var n=!1,s=!1,u=!1;"Uint8Array"in window&&"set"in Uint8Array.prototype&&(n=!0);try{n&&"binaryType"in new WebSocket("ws://localhost:17523")&&(Util.Info("Detected binaryType support in WebSockets"),s=!0)}catch(a){}typeof e=="undefined"&&(s?e=["binary","base64"]:e="base64");if(!s){if(e==="binary")throw"WebSocket binary sub-protocol requested but not supported";if(typeof e=="object"){var f=[];for(var l=0;l<e.length;l++)e[l]==="binary"?Util.Error("Skipping unsupported WebSocket binary sub-protocol"):f.push(e[l]);if(!(f.length>0))throw"Only WebSocket binary sub-protocol was requested and not supported.";e=f}}return e}function M(e,r){r=O(r),a?t={}:(t=new WebSocket(e,r),r.indexOf("binary")>=0&&(t.binaryType="arraybuffer")),t.onmessage=L,t.onopen=function(){Util.Debug(">> WebSock.onopen"),t.protocol?(n=t.protocol,Util.Info("Server chose sub-protocol: "+t.protocol)):(n="base64",Util.Error("Server select no sub-protocol!: "+t.protocol)),u.open(),Util.Debug("<< WebSock.onopen")},t.onclose=function(e){Util.Debug(">> WebSock.onclose"),u.close(e),Util.Debug("<< WebSock.onclose")},t.onerror=function(e){Util.Debug(">> WebSock.onerror: "+e),u.error(e),Util.Debug("<< WebSock.onerror")}}function _(){if(t){if(t.readyState===WebSocket.OPEN||t.readyState===WebSocket.CONNECTING)Util.Info("Closing WebSocket connection"),t.close();t.onmessage=function(e){return}}}function D(t,r){return a=!0,n=r,e.send=t,e.close=function(){},L}function P(){return e.maxBufferedAmount=200,e.get_sQ=f,e.get_rQ=l,e.get_rQi=c,e.set_rQi=h,e.rQlen=p,e.rQpeek8=d,e.rQshift8=v,e.rQunshift8=m,e.rQshift16=g,e.rQshift32=y,e.rQshiftStr=b,e.rQshiftBytes=w,e.rQslice=E,e.rQwait=S,e.flush=N,e.send=C,e.send_string=k,e.on=A,e.init=O,e.open=M,e.close=_,e.testMode=D,e}var e={},t=null,n="base64",r=[],i=0,s=1e4,o=[],u={message:function(){},open:function(){},close:function(){},error:function(){}},a=!1;return P()}window.WebSocket&&!window.WEB_SOCKET_FORCE_FLASH?Websock_native=!0:window.MozWebSocket&&!window.WEB_SOCKET_FORCE_FLASH?(Websock_native=!0,window.WebSocket=window.MozWebSocket):(Websock_native=!1,function(){window.WEB_SOCKET_SWF_LOCATION=Util.get_include_uri()+"web-socket-js/WebSocketMain.swf",Util.Engine.trident&&(Util.Debug("Forcing uncached load of WebSocketMain.swf"),window.WEB_SOCKET_SWF_LOCATION+="?"+Math.random()),Util.load_scripts(["web-socket-js/swfobject.js","web-socket-js/web_socket.js"])}());